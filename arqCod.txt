// Arquivo de teste para o compilador
// Este arquivo contém exemplos de código correto e com diferentes tipos de erros

// === Teste 1: Declarações de variáveis corretas ===
variavel x: inteiro = 10;
variavel y: decimal = 20.5;
variavel texto1: texto = "Hello World";
variavel flag: logico = verdadeiro;

// === Teste 2: Erro léxico - caractere inválido ===
variavel @erro: inteiro = 5;

// === Teste 3: Erro léxico - identificador iniciando com número ===
variavel 1invalid: inteiro = 10;

// === Teste 4: Erro sintático - faltando ponto-e-vírgula ===
variavel z: inteiro = 42

// === Teste 5: Erro sintático - tipo inválido ===
variavel data: data = hoje;

// === Teste 6: Erro semântico - variável já declarada ===
variavel x: decimal = 30.0;

// === Teste 7: Estruturas condicionais ===
se (x > 10) {
    y = y + 5;
} senao {
    y = y - 5;
}

// === Teste 8: Erro sintático - faltando parêntese ===
se x > 10) {
    y = y * 2;
}

// === Teste 9: Laços de repetição ===
enquanto (x > 0) {
    x = x - 1;
    y = y + x;
}

// === Teste 10: Erro sintático - faltando chaves ===
enquanto (x > 0)
    x = x - 1;

// === Teste 11: Laço para ===
para (i = 0; i < 10; i = i + 1) {
    x = x + i;
}

// === Teste 12: Erro semântico - variável não declarada ===
j = j + 1;

// === Teste 13: Declaração de função ===
funcao soma(a: inteiro, b: inteiro) {
    retornar a + b;
}

// === Teste 14: Erro sintático - faltando tipo de parâmetro ===
funcao multiplica(a: inteiro, b) {
    retornar a * b;
}

// === Teste 15: Erro sintático - parênteses ausentes em chamada de função ===
resultado = soma 10, 20;

// === Teste 16: Chamada de função correta ===
resultado = soma(30, 40);

// === Teste 17: Erro semântico - tipo incompatível ===
variavel texto2: texto = 123;

// === Teste 18: Expressões aritméticas complexas ===
variavel calc: decimal = (10 + 5) * (y / 2) - x;

// === Teste 19: Erro léxico - string não fechada ===
variavel msg: texto = "mensagem sem fechar;

// === Teste 20: Erro sintático - expressão incompleta ===
variavel op: inteiro = 10 +;

// === Teste 21: Funções aninhadas e escopo ===
funcao externa() {
    variavel val: inteiro = 100;
    
    funcao interna(x: inteiro) {
        retornar val + x;
    }
    
    retornar interna(50);
}

// === Teste 22: Erro semântico - função não declarada ===
resultado = funcaoInexistente();

// === Teste 23: Erro léxico - comentário não fechado ===
/* Comentário que não fecha

// === Teste 24: Declarações com múltiplos erros mistos ===
variav@l erro_composto: list = [1, 2, "três"];

// === Teste 25: Diferentes operadores relacionais ===
se (x == 10) {
    y = 20;
} senao se (x <= 5) {
    y = 15;
} senao se (x >= 15) {
    y = 25;
} senao {
    y = 0;
}

// === Teste Final: Programa completo correto ===
funcao calculaFatorial(n: inteiro) {
    variavel resultado: inteiro = 1;
    variavel i: inteiro = 1;
    
    enquanto (i <= n) {
        resultado = resultado * i;
        i = i + 1;
    }
    
    retornar resultado;
}

variavel numero: inteiro = 5;
variavel fatorial: inteiro = calculaFatorial(numero);